plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.a301'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// spring
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation "org.springframework.boot:spring-boot-starter-security"
	testImplementation "org.springframework.security:spring-security-test"

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'


	// mariadb
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// p6spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	// test
	testImplementation 'org.assertj:assertj-core:3.21.0'

	// docker
	implementation "org.springframework.boot:spring-boot-docker-compose"

}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
